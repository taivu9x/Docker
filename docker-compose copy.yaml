# Use postgres/example user/password credentials
version: '3.8'

networks:
  app-tier:
    driver: bridge
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    networks:
      - app-tier
    restart: always
    ports:
      - '2181:2181'
    environment:
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=kafka
      - ZOO_SERVER_PASSWORDS=kafka_password
  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - app-tier
    restart: always
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=SASL_SSL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=SASL_SSL://:9092
      - KAFKA_ZOOKEEPER_USER=kafka
      - KAFKA_ZOOKEEPER_PASSWORD=kafka_password
      - KAFKA_CLIENT_USERS=user
      - KAFKA_CLIENT_PASSWORDS=password
      # - KAFKA_CERTIFICATE_PASSWORD=certificatePassword123
      # - KAFKA_TLS_TYPE=JKS # or PEM
  mysql:
    platform: arm64v8/mysql:8-oracle
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    networks:
      - app-tier
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: ninjavan
      MYSQL_USER: ninjavan
      MYSQL_PASSWORD: 12345678
    volumes:
    # mount dữ liệu ra ngoài máy local: mapping thư mục ./database trên máy local với thư mục /var/lib/mysql trong database
      - "./database:/var/lib/mysql"
  redis:
    image: redis:6.2-alpine
    restart: always
    networks:
      - app-tier
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - './redis/data'
  # api:
    # container_name: ninjavan_be
    # restart: always
    # networks:
    #   - etl_network
    # ports:
    #   - 8080:8080
    # build service bằng file Dockerfile trong thư mục
    # build:
    #   context: .
    # image: ninjavan
    # depends_on:
    #   - mysql
    #   - redis
    # khởi động sau khi container mysql, redis start thành công
    # stdin_open: true
    # tty: true
volumes:
  db-config:
  db-data: